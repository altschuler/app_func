// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 3 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"

open AST

# 10 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | ASS
  | SKIP
  | SEMI
  | IF
  | THEN
  | ELSE
  | WHILE
  | DO
  | FI
  | OD
  | NEG
  | AND
  | PLUS
  | MINUS
  | TIMES
  | EQ
  | LE
  | TRUE
  | FALSE
  | VAR of (string)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_ASS
    | TOKEN_SKIP
    | TOKEN_SEMI
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FI
    | TOKEN_OD
    | TOKEN_NEG
    | TOKEN_AND
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_EQ
    | TOKEN_LE
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_VAR
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Stm
    | NONTERM_AExp
    | NONTERM_BExp

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | ASS  -> 3 
  | SKIP  -> 4 
  | SEMI  -> 5 
  | IF  -> 6 
  | THEN  -> 7 
  | ELSE  -> 8 
  | WHILE  -> 9 
  | DO  -> 10 
  | FI  -> 11 
  | OD  -> 12 
  | NEG  -> 13 
  | AND  -> 14 
  | PLUS  -> 15 
  | MINUS  -> 16 
  | TIMES  -> 17 
  | EQ  -> 18 
  | LE  -> 19 
  | TRUE  -> 20 
  | FALSE  -> 21 
  | VAR _ -> 22 
  | INT _ -> 23 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_ASS 
  | 4 -> TOKEN_SKIP 
  | 5 -> TOKEN_SEMI 
  | 6 -> TOKEN_IF 
  | 7 -> TOKEN_THEN 
  | 8 -> TOKEN_ELSE 
  | 9 -> TOKEN_WHILE 
  | 10 -> TOKEN_DO 
  | 11 -> TOKEN_FI 
  | 12 -> TOKEN_OD 
  | 13 -> TOKEN_NEG 
  | 14 -> TOKEN_AND 
  | 15 -> TOKEN_PLUS 
  | 16 -> TOKEN_MINUS 
  | 17 -> TOKEN_TIMES 
  | 18 -> TOKEN_EQ 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_TRUE 
  | 21 -> TOKEN_FALSE 
  | 22 -> TOKEN_VAR 
  | 23 -> TOKEN_INT 
  | 26 -> TOKEN_end_of_input
  | 24 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Stm 
    | 3 -> NONTERM_Stm 
    | 4 -> NONTERM_Stm 
    | 5 -> NONTERM_Stm 
    | 6 -> NONTERM_Stm 
    | 7 -> NONTERM_Stm 
    | 8 -> NONTERM_AExp 
    | 9 -> NONTERM_AExp 
    | 10 -> NONTERM_AExp 
    | 11 -> NONTERM_AExp 
    | 12 -> NONTERM_AExp 
    | 13 -> NONTERM_AExp 
    | 14 -> NONTERM_BExp 
    | 15 -> NONTERM_BExp 
    | 16 -> NONTERM_BExp 
    | 17 -> NONTERM_BExp 
    | 18 -> NONTERM_BExp 
    | 19 -> NONTERM_BExp 
    | 20 -> NONTERM_BExp 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 26 
let _fsyacc_tagOfErrorTerminal = 24

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | ASS  -> "ASS" 
  | SKIP  -> "SKIP" 
  | SEMI  -> "SEMI" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FI  -> "FI" 
  | OD  -> "OD" 
  | NEG  -> "NEG" 
  | AND  -> "AND" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | EQ  -> "EQ" 
  | LE  -> "LE" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | VAR _ -> "VAR" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | ASS  -> (null : System.Object) 
  | SKIP  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FI  -> (null : System.Object) 
  | OD  -> (null : System.Object) 
  | NEG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | VAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 6us; 65535us; 0us; 2us; 8us; 9us; 15us; 11us; 18us; 12us; 19us; 13us; 23us; 14us; 12us; 65535us; 5us; 6us; 16us; 35us; 21us; 35us; 27us; 29us; 28us; 30us; 38us; 32us; 39us; 33us; 40us; 34us; 43us; 36us; 44us; 37us; 47us; 35us; 50us; 35us; 5us; 65535us; 16us; 17us; 21us; 22us; 28us; 45us; 47us; 48us; 50us; 49us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 10us; 23us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 2us; 1us; 5us; 1us; 1us; 1us; 2us; 1us; 2us; 4us; 2us; 11us; 12us; 13us; 1us; 3us; 1us; 4us; 2us; 4us; 5us; 1us; 4us; 2us; 5us; 5us; 2us; 5us; 6us; 2us; 5us; 6us; 2us; 5us; 7us; 1us; 5us; 1us; 6us; 2us; 6us; 20us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 20us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 10us; 18us; 4us; 10us; 11us; 12us; 13us; 6us; 10us; 11us; 12us; 13us; 16us; 17us; 1us; 10us; 4us; 11us; 11us; 12us; 13us; 4us; 11us; 12us; 12us; 13us; 4us; 11us; 12us; 13us; 13us; 5us; 11us; 12us; 13us; 16us; 17us; 4us; 11us; 12us; 13us; 16us; 4us; 11us; 12us; 13us; 17us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 2us; 18us; 20us; 1us; 18us; 1us; 19us; 2us; 19us; 20us; 2us; 20us; 20us; 1us; 20us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 7us; 9us; 11us; 13us; 18us; 20us; 22us; 25us; 27us; 30us; 33us; 36us; 39us; 41us; 43us; 46us; 48us; 50us; 52us; 54us; 57us; 59us; 61us; 63us; 65us; 67us; 70us; 75us; 82us; 84us; 89us; 94us; 99us; 105us; 110us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 132us; 134us; 136us; 139us; 142us; |]
let _fsyacc_action_rows = 51
let _fsyacc_actionTableElements = [|5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 0us; 49152us; 2us; 32768us; 0us; 3us; 5us; 15us; 0us; 16385us; 1us; 32768us; 3us; 5us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 3us; 16386us; 15us; 38us; 16us; 40us; 17us; 39us; 0us; 16387us; 5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 2us; 32768us; 2us; 10us; 5us; 15us; 0us; 16388us; 0us; 16389us; 2us; 32768us; 5us; 15us; 8us; 19us; 2us; 32768us; 5us; 15us; 11us; 20us; 2us; 32768us; 5us; 15us; 12us; 24us; 5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 6us; 32768us; 1us; 28us; 13us; 47us; 20us; 41us; 21us; 42us; 22us; 25us; 23us; 26us; 2us; 32768us; 7us; 18us; 14us; 50us; 5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 0us; 16390us; 6us; 32768us; 1us; 28us; 13us; 47us; 20us; 41us; 21us; 42us; 22us; 25us; 23us; 26us; 2us; 32768us; 10us; 23us; 14us; 50us; 5us; 32768us; 1us; 8us; 4us; 7us; 6us; 16us; 9us; 21us; 22us; 4us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 6us; 32768us; 1us; 28us; 13us; 47us; 20us; 41us; 21us; 42us; 22us; 25us; 23us; 26us; 4us; 32768us; 2us; 31us; 15us; 38us; 16us; 40us; 17us; 39us; 6us; 32768us; 2us; 31us; 15us; 38us; 16us; 40us; 17us; 39us; 18us; 43us; 19us; 44us; 0us; 16394us; 1us; 16395us; 17us; 39us; 0us; 16396us; 1us; 16397us; 17us; 39us; 5us; 32768us; 15us; 38us; 16us; 40us; 17us; 39us; 18us; 43us; 19us; 44us; 3us; 16400us; 15us; 38us; 16us; 40us; 17us; 39us; 3us; 16401us; 15us; 38us; 16us; 40us; 17us; 39us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 0us; 16398us; 0us; 16399us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 3us; 32768us; 1us; 27us; 22us; 25us; 23us; 26us; 2us; 32768us; 2us; 46us; 14us; 50us; 0us; 16402us; 6us; 32768us; 1us; 28us; 13us; 47us; 20us; 41us; 21us; 42us; 22us; 25us; 23us; 26us; 0us; 16403us; 0us; 16404us; 6us; 32768us; 1us; 28us; 13us; 47us; 20us; 41us; 21us; 42us; 22us; 25us; 23us; 26us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 10us; 11us; 13us; 17us; 21us; 22us; 28us; 31us; 32us; 33us; 36us; 39us; 42us; 48us; 55us; 58us; 64us; 70us; 71us; 78us; 81us; 87us; 88us; 89us; 90us; 94us; 101us; 106us; 113us; 114us; 116us; 117us; 119us; 125us; 129us; 133us; 137us; 141us; 145us; 146us; 147us; 151us; 155us; 158us; 159us; 166us; 167us; 168us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 3us; 1us; 3us; 3us; 7us; 5us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 4us; 4us; 4us; 4us; 4us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 65535us; 65535us; 16387us; 65535us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 16391us; 16392us; 16393us; 65535us; 65535us; 65535us; 65535us; 16394us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 16399us; 65535us; 65535us; 65535us; 16402us; 65535us; 65535us; 65535us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 227 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startMain));
# 236 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 32 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                              _1 
                   )
# 32 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 247 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 35 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                     Asgn(_1,_3) 
                   )
# 35 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 259 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 36 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                     Skip     
                   )
# 36 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 269 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                     _2 
                   )
# 37 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 280 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 38 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                     Seq(_1,_3) 
                   )
# 38 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 292 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                            ITE(_2,_4,_6) 
                   )
# 39 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 305 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Stm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                      While(_2,_4) 
                   )
# 40 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : Stm));
# 317 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               Var _1  
                   )
# 43 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 328 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               Int _1 
                   )
# 44 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 339 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               _2 
                   )
# 45 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 350 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               Add(_1,_3) 
                   )
# 46 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 362 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               Mul(_1,_3) 
                   )
# 47 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 374 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                               Sub(_1,_3) 
                   )
# 48 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : AExp));
# 386 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                TT 
                   )
# 51 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 396 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                FF 
                   )
# 52 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 406 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                Eq(_1,_3) 
                   )
# 53 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 418 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : AExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                Ltn(_1,_3) 
                   )
# 54 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 430 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                _2 
                   )
# 55 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 441 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                Not _2 
                   )
# 56 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
# 452 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : BExp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                                                                And(_1,_3) 
                   )
# 57 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fsy"
                 : BExp));
|]
# 465 "C:\Users\mire\Documents\MRH data\Kurser\02257-15\Project1\Handout\Test\WhileInterpreter\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 27;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Stm =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
